function dydt=mDroopModel(y,TempK,par)
%
%modified Droop model
%
fT_Vl=fT_Eyring(TempK,par.H_Vl,par);
fT_Vs=fT_Eyring(TempK,par.H_Vs,par);
fT_Kl=fT_Arrhenius(TempK,par.H_Kl,par);
fT_Ks=fT_Arrhenius(TempK,par.H_Ks,par);
fact0=fT_EnzActs(par.T0,par);
factT=fT_EnzActs(TempK,par)./fact0;
Vl=par.Vl*factT*fT_Vl;
Vs=par.Vs*factT*fT_Vs;
Kl=par.Kl*fT_Kl;
Ks=par.Ks*fT_Ks;

vid=par.vid;
dydt=zeros(size(y));
Cl=y(vid.Cl);
Cs=y(vid.Cs);
Bc=y(vid.Bc);
BV=y(vid.BV);
Q=min(max(Bc/BV,par.Qmin),par.Qmax);
q=(par.Qmax-Q)/(par.Qmax-par.Qmin);
denorm=1+Cl/Kl+Cs/Ks;
hl=Vl*q*Cl/Kl/denorm;
hs=Vs*q*Cs/Ks/denorm;
Fnpp2Cl=(1-par.a)*par.Fnpp;
mu=par.umax*(1-par.Qmin/Q);
R=par.c1*Q*mu+par.c2*(Q-par.Qmin);
h=hl+hs;
mortC=par.gamma*Bc;
mortV=par.gamma*BV;
dydt(vid.Cl)=Fnpp2Cl-BV*hl;
dydt(vid.Cs)=par.Fnpp-Fnpp2Cl-BV*hs+mortC;
dydt(vid.Bc)=BV*(h*par.Yb-R)-mortC;
dydt(vid.BV)=BV*mu-mortV;
dydt(vid.CO2)=BV*(h*(1-par.Yb)+R);
dydt(vid.hup)=h*BV;
dydt(vid.cue)=mu/h;
%fprintf('mu=%f,%f,%f\n',mu,h*par.Yb,R);
%fprintf('%f,%f,%f,%f\n',sum(dydt(1:3)),par.Fnpp,mu,R);
end
